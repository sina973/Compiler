e	int	void	if	else	switch	while	break	default	case	return	id	num	+	-	*	=	==	<	,	;	(	)	{	}	[	]	$
Program	Declaration_list`$	Declaration_list`$	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.
Declaration_list	Declaration`Declaration_list	Declaration`Declaration_list	e	.	e	e	e	.	.	e	e	e	e	e	.	.	.	.	.	e	e	.	e	e	.	.	e
Declaration	Declaration_initial`Declaration_prime	Declaration_initial`Declaration_prime	synch	.	synch	synch	synch	.	.	synch	synch	synch	synch	synch	.	.	.	.	.	synch	synch	.	synch	synch	.	.	synch
Declaration_initial	Type_specifier`id	Type_specifier`id	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	synch	synch	synch	synch	.	.	synch	.	.
Declaration_prime	synch	synch	synch	.	synch	synch	synch	.	.	synch	synch	synch	synch	synch	.	.	.	.	.	Var_declaration_prime	Fun_declaration_prime	.	synch	synch	Var_declaration_prime	.	synch
Var_declaration_prime	synch	synch	synch	.	synch	synch	synch	.	.	synch	synch	synch	synch	synch	.	.	.	.	.	;	synch	.	synch	synch	[`num`]`;	.	synch
Fun_declaration_prime	synch	synch	synch	.	synch	synch	synch	.	.	synch	synch	synch	synch	synch	.	.	.	.	.	synch	(`Params`)`Compound_stmt	.	synch	synch	.	.	synch
Type_specifier	int	void	.	.	.	.	.	.	.	.	synch	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.
Params	int`id`Param_prime`Param_list	void`Param_list_void_abtar	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	synch	.	.	.	.	.
Param_list_void_abtar	.	.	.	.	.	.	.	.	.	.	id`Param_prime`Param_list	.	.	.	.	.	.	.	.	.	.	e	.	.	.	.	.
Param_list	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	,`Param`Param_list	.	.	e	.	.	.	.	.
Param	Declaration_initial`Param_prime	Declaration_initial`Param_prime	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	synch	.	.	synch	.	.	.	.	.
Param_prime	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	e	.	.	e	.	.	[`]	.	.
Compound_stmt	synch	synch	synch	synch	synch	synch	synch	synch	synch	synch	synch	synch	synch	synch	.	.	.	.	.	synch	synch	.	{`Declaration_list`Statement_list`}	synch	.	.	synch
Statement_list	.	.	Statement`Statement_list	.	Statement`Statement_list	Statement`Statement_list	Statement`Statement_list	e	e	Statement`Statement_list	Statement`Statement_list	Statement`Statement_list	Statement`Statement_list	Statement`Statement_list	.	.	.	.	.	Statement`Statement_list	Statement`Statement_list	.	Statement`Statement_list	e	.	.	.
Statement	.	.	Selection_stmt	synch	Switch_stmt	Iteration_stmt	Expression_stmt	synch	synch	Return_stmt	Expression_stmt	Expression_stmt	Expression_stmt	Expression_stmt	.	.	.	.	.	Expression_stmt	Expression_stmt	.	Compound_stmt	synch	.	.	.
Expression_stmt	.	.	synch	synch	synch	synch	break`;	synch	synch	synch	Expression`;	Expression`;	Expression`;	Expression`;	.	.	.	.	.	;	Expression`;	.	synch	synch	.	.	.
Selection_stmt	.	.	if`(`Expression`)`Statement`else`Statement	synch	synch	synch	synch	synch	synch	synch	synch	synch	synch	synch	.	.	.	.	.	synch	synch	.	synch	synch	.	.	.
Iteration_stmt	.	.	synch	synch	synch	while`(`Expression`)`Statement	synch	synch	synch	synch	synch	synch	synch	synch	.	.	.	.	.	synch	synch	.	synch	synch	.	.	.
Return_stmt	.	.	synch	synch	synch	synch	synch	synch	synch	return`Return_stmt_prime	synch	synch	synch	synch	.	.	.	.	.	synch	synch	.	synch	synch	.	.	.
Return_stmt_prime	.	.	synch	synch	synch	synch	synch	synch	synch	synch	Expression`;	Expression`;	Expression`;	Expression`;	.	.	.	.	.	;	Expression`;	.	synch	synch	.	.	.
Switch_stmt	.	.	synch	synch	switch`(`Expression`)`{`Case_stmts`Default_stmt`}	synch	synch	synch	synch	synch	synch	synch	synch	synch	.	.	.	.	.	synch	synch	.	synch	synch	.	.	.
Case_stmts	.	.	.	.	.	.	.	e	Case_stmt`Case_stmts	.	.	.	.	.	.	.	.	.	.	.	.	.	.	e	.	.	.
Case_stmt	.	.	.	.	.	.	.	synch	case`num`:`Statement_list	.	.	.	.	.	.	.	.	.	.	.	.	.	.	synch	.	.	.
Default_stmt	.	.	.	.	.	.	.	default`:`Statement_list	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	e	.	.	.
Expression	.	.	.	.	.	.	.	.	.	.	id`B	Simple_expression_zegond	Simple_expression_zegond	Simple_expression_zegond	.	.	.	.	synch	synch	Simple_expression_zegond	synch	.	.	.	synch	.
B	.	.	.	.	.	.	.	.	.	.	.	.	Simple_expression_prime	Simple_expression_prime	Simple_expression_prime	"="`Expression	Simple_expression_prime	Simple_expression_prime	Simple_expression_prime	Simple_expression_prime	Simple_expression_prime	Simple_expression_prime	.	.	[`Expression`]`H	Simple_expression_prime	.
H	.	.	.	.	.	.	.	.	.	.	.	.	G`D`C	G`D`C	G`D`C	"="`Expression	G`D`C	G`D`C	G`D`C	G`D`C	.	G`D`C	.	.	.	G`D`C	.
Simple_expression_zegond	.	.	.	.	.	.	.	.	.	.	.	Additive_expression_zegond`C	Additive_expression_zegond`C	Additive_expression_zegond`C	.	.	.	.	synch	synch	Additive_expression_zegond`C	synch	.	.	.	synch	.
Simple_expression_prime	.	.	.	.	.	.	.	.	.	.	.	.	Additive_expression_prime`C	Additive_expression_prime`C	Additive_expression_prime`C	.	Additive_expression_prime`C	Additive_expression_prime`C	Additive_expression_prime`C	Additive_expression_prime`C	Additive_expression_prime`C	Additive_expression_prime`C	.	.	.	Additive_expression_prime`C	.
C	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	Relop`Additive_expression	Relop`Additive_expression	e	e	.	e	.	.	.	e	.
Relop	.	.	.	.	.	.	.	.	.	.	synch	synch	synch	synch	.	.	"=="	"<"	.	.	synch	.	.	.	.	.	.
Additive_expression	.	.	.	.	.	.	.	.	.	.	Term`D	Term`D	Term`D	Term`D	.	.	.	.	synch	synch	Term`D	synch	.	.	.	synch	.
Additive_expression_prime	.	.	.	.	.	.	.	.	.	.	.	.	Term_prime`D	Term_prime`D	Term_prime`D	.	Term_prime`D	Term_prime`D	Term_prime`D	Term_prime`D	Term_prime`D	Term_prime`D	.	.	.	Term_prime`D	.
Additive_expression_zegond	.	.	.	.	.	.	.	.	.	.	.	Term_zegond`D	Term_zegond`D	Term_zegond`D	.	.	synch	synch	synch	synch	Term_zegond`D	synch	.	.	.	synch	.
D	.	.	.	.	.	.	.	.	.	.	.	.	Addop`Term`D	Addop`Term`D	.	.	e	e	e	e	.	e	.	.	.	e	.
Addop	.	.	.	.	.	.	.	.	.	.	synch	synch	"+"	"-"	.	.	.	.	.	.	synch	.	.	.	.	.	.
Term	.	.	.	.	.	.	.	.	.	.	Signed_factor`G	Signed_factor`G	Signed_factor`G	Signed_factor`G	.	.	synch	synch	synch	synch	Signed_factor`G	synch	.	.	.	synch	.
Term_prime	.	.	.	.	.	.	.	.	.	.	.	.	Signed_factor_prime`G	Signed_factor_prime`G	Signed_factor_prime`G	.	Signed_factor_prime`G	Signed_factor_prime`G	Signed_factor_prime`G	Signed_factor_prime`G	Signed_factor_prime`G	Signed_factor_prime`G	.	.	.	Signed_factor_prime`G	.
Term_zegond	.	.	.	.	.	.	.	.	.	.	.	Signed_factor_zegond`G	Signed_factor_zegond`G	Signed_factor_zegond`G	.	.	synch	synch	synch	synch	Signed_factor_zegond`G	synch	.	.	.	synch	.
G	.	.	.	.	.	.	.	.	.	.	.	.	e	e	*`Signed_factor`G	.	e	e	e	e	.	e	.	.	.	e	.
Signed_factor	.	.	.	.	.	.	.	.	.	.	Factor	Factor	"+"`Factor	"-"`Factor	synch	.	synch	synch	synch	synch	Factor	synch	.	.	.	synch	.
Signed_factor_prime	.	.	.	.	.	.	.	.	.	.	.	.	Factor_prime	Factor_prime	Factor_prime	.	Factor_prime	Factor_prime	Factor_prime	Factor_prime	Factor_prime	Factor_prime	.	.	.	Factor_prime	.
Signed_factor_zegond	.	.	.	.	.	.	.	.	.	.	.	Factor_zegond	"+"`Factor	"-"`Factor	synch	.	synch	synch	synch	synch	Factor_zegond	synch	.	.	.	synch	.
Factor	.	.	.	.	.	.	.	.	.	.	id`Var_call_prime	num	synch	synch	synch	.	synch	synch	synch	synch	(`Expression`)	synch	.	.	.	synch	.
Var_call_prime	.	.	.	.	.	.	.	.	.	.	.	.	Var_prime	Var_prime	Var_prime	.	Var_prime	Var_prime	Var_prime	Var_prime	(`Args`)	Var_prime	.	.	Var_prime	Var_prime	.
Var_prime	.	.	.	.	.	.	.	.	.	.	.	.	e	e	e	.	e	e	e	e	.	e	.	.	[`Expression`]	e	.
Factor_prime	.	.	.	.	.	.	.	.	.	.	.	.	e	e	e	.	e	e	e	e	(`Args`)	e	.	.	.	e	.
Factor_zegond	.	.	.	.	.	.	.	.	.	.	.	num	synch	synch	synch	.	synch	synch	synch	synch	(`Expresion`)`	synch	.	.	.	synch	.
Args	.	.	.	.	.	.	.	.	.	.	Arg_list	Arg_list	Arg_list	Arg_list	.	.	.	.	.	.	Arg_list	e	.	.	.	.	.
Arg_list	.	.	.	.	.	.	.	.	.	.	Expression`Arg_list_prime	Expression`Arg_list_prime	Expression`Arg_list_prime	Expression`Arg_list_prime	.	.	.	.	.	.	Expression`Arg_list_prime	synch	.	.	.	.	.
Arg_list_prime	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	.	,`Expression`Arg_list_prime	.	.	e	.	.	.	.	.
